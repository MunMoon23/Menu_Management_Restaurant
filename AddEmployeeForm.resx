<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AddEmployee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="DelelteEmployee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aXCAXT1XF7+AWw/yqmV9PXyjLh4O5zWDA+yqi+ZV66J51bpoXldfrQuHw5npGV4XzavWRfOqddG8rub9
        C7Amzx8cYFddNK9aF82r1kXzuvo8XTgczlMHB9hVF82r1kXzqnXRvK4+RRcOh5PliXqAXXXRvGpdNK9a
        F83r6qN14XA4MxWDumhetS6aV62L5nWVQtAFzFQM6qJ51bpoXrUumtdVCkEXMFMxqIvmVeuiedW6aF5X
        KQRdwEzFoC6aV62L5lXronldpRB0AVmeqAfYVRfNq9ZF86p10byu3lIXDqdnlmJQF82r1kXzqnXRvI5S
        CLoBsxSDumhetS6aV62L5nWUQtANmKUY1EXzqnXRvGpdNK+jFIJuwCzFoC6aV62L5lXronkd/bEuGo7m
        O4OD7KiL5lXronnVumheRykE3YBZikFdNK9aF82r1kXzOvpVXTQczSzFoC6aV62L5lXronkd/YwuGo5m
        lmJQF82r1kXzqnXRvI5+WBcNRzNLMaiL5lXronnVumheRykE3YBZikFdNK9aF82r1kXzOvo2XTQcTZYo
        6kF21EXzqnXRvGpdNK+jb9BFw9HMUgzqonnVumhetS6a11EKQTdglmJQF82r1kXzqnXRvI5SCLoBsxSD
        umhetS6aV62L5nWUQtANyBJFPciOumhetS6aV62L5nX0ybpoOJpZikFdNK9aF82r1kXzOkoh6AbMUgzq
        onnVumhetS6a11EKQTdglmJQF82r1kXzqnXRvI5SCLoBsxSDumhetS6aV62L5nWUQtANyBJFPciOumhe
        tS6aV62L5nX09rpoOJpZikFdNK9aF82r1kXzOkoh6IbMUAzqonnVumhetS6a100KQQ1mKAZ10bxqXTSv
        WhfN6yaFoAYzFIO6aF61LppXrYvmdZNCUIMZikFdNK9aF82r1kXzukkhqEGWKeqBdtNF86p10bxqXTSv
        m9/WBcP6zFAM6qJ51bpoXrUumtdNCkENZigGddG8al00r1oXzesmhaAGMxSDumhetS6aV62L5nWTQlCD
        GYpBXTSvWhfNq9ZF87pJIahBlinqgXbTRfOqddG8al00r5uX6YJhfWYoBnXRvGpdNK9aF83rJoWgBjMU
        g7poXrUumleti+Z1k0JQgxmKQV00r1oXzavWRfO6SSGoQZYp6oF200XzqnXRvGpdNK+bz9UFw/rMUAzq
        onnVumhetS6a100KQQ1mKAZ10bxqXTSvWhfN6yaFoAYzFIO6aF61LppXrYvmdZNCUIMZikFdNK9aF82r
        1kXzukkhqEGWKeqBdtNF86p10bxqXTSvm/fQBcP6zFAM6qJ51bpoXrUumtdNCkENZigGddG8al00r1oX
        zesmhaAm3YtBXTSvWhfNq9ZF8zpJIWgB3YtBXTSvWhfNq9ZF8zpJIWgB3YtBXTSvWhfNq9ZF8zpJIWgB
        WaqoB9tJF82r1kXzqnXRvE7+SBcLy+leDOqiedW6aF61LprXSQpBC+heDOqiedW6aF61LprXSQpBC+he
        DOqiedW6aF61LprXSQpBC+heDOqiedW6aF61LprXSQpBC8hSRT3YTrpoXrUumleti+Z18n26WFhO92JQ
        F82r1kXzqnXRvE5SCFpA92JQF82r1kXzqnXRvE5SCFpA92JQF82r1kXzqnXRvE5SCFpAlirqwXbSRfOq
        ddG8al00r5Mv1sXCcroXg7poXrUumleti+Z1kkLQAroXg7poXrUumleti+Z1kkLQAroXg7poXrUumlet
        i+Z1kkLQAroXg7poXrUumleti+Z1kkLQArJUUQ+2ky6aV62L5lXronmdvEAXC8vpXgzqonnVumhetS6a
        10kKQQvoXgzqonnVumhetS6a10kKQQvoXgzqonnVumhetS6a10kKQYvoXAzqonnVumhetS6a10UKQQvp
        XAzqonnVumhetS6a10UKQQvJckU94C66aF61LppXrYvmdfFXulDYnM7FoC6aV62L5lXronldpBC0kM7F
        oC6aV62L5lXronldpBC0kM7FoC6aV62L5lXronldpBC0kM7FoC6aV62L5lXronldpBC0kCxX1APuoovm
        VeuiedW6aF4XP6QLhc3pXAzqonnVumhetS6a10UKQQvpXAzqonnVumhetS6a10UKQQvpXAzqonnVumhe
        tS6a10UKQQvJckU94C66aF61LppXrYvmdfFVulDYnM7FoC6aV62L5lXronldpBC0kM7FoC6aV62L5lXr
        onldpBC0kM7FoC6aV62L5lXronldpBC0kM7FoC6aV62L5lXronldpBC0kCxX1APuoovmVeuiedW6aF4X
        H6oLhc3pXAzqonnVumhetS6a10UKQQvpXAzqonnVumhetS6a10UKQQvpXAzqonnVumhetS6a10UKQQvp
        XAzqonnVumhetS6a10UKQYvpWgzqonnVumhetS6a10EKQbdAlizqQXfQRfOqddG8al00r4N/1EWCT9di
        UBfNq9ZF86p10bwOUgi6BboWg7poXrUumleti+Z1kELQLdC1GNRF86p10bxqXTSvgxSCboGuxaAumlet
        i+ZV66J5HaQQdAtkyaIedAddNK9aF82r1kXzOvhpXST4dC0GddG8al00r1oXzesghaBboGsxqIvmVeui
        edW6aF4HKQTdAl2LQV00r1oXzavWRfM6SCHoFuhaDHquLnQBtxnkVcv6jl8KQbdAlizqQXfwfF3oAvIl
        o5pXLes7fikE3QJdi0Ev1oUu4BWDvGpZ3/FLIegWyJJFPegOXh0RZ+hi1yD/zTWDvGpZ3/FLIegWyJJF
        Pegu5ncnS3nZIGdbsr7jlULQLZAli3rQXbwhIi7UBZ+GR63+jeZsS9Z3vFIIugU6F4OmOZAXHfHtbP5d
        fuU6ieFlfcdnzioU0/UZXzV/Lr1ktd78FVea/51/1uFnVta3fSkE3QKdi0ERbyyFoFugczEo4o2lEHQL
        ZMmiHjRiR2+hwws1dC0GRTwlhaBbpGsxKOIpKQTdIl2LQRFPSSHoFulaDIp4SgpBt0jXYlDEU1IIukWy
        bFEPHLGTX9GhhTo+OThwxE5+QocW6nj34MARO/lOHVqo43WDA0fs5KU6tFDHEwYHjtjJx+vQQh3nDQ4c
        sZN31qGFWmZ5SSjunz/QYYV63jo4eMQOvlmHFep54ODgETtIEcgx8Y3B4SOepF/XIYXt0bkhGPfTJ+mQ
        wva4WUR8c/AgIJ6Eef9/ziQcI4+IiH8NHgzE4zRnkBbgEyJvu9QHBPE4vVyHEo6PW0XEdwcPCuJxeGVE
        nK1DCcfLvSLi94MHB3Gb/m5VVQ8NeNCqi00fJMRteG1EPFiHEE6Wh0fEHwYPFmKl+d1mzho05L4R8bPB
        g4ZYYc7WfXTooBe3iYgPDh48RMePRsRtddigL0+JiF8OHkjEJf6Cu/zmJX9N+AreTwA3MPv98x2J8y3p
        YHLOioinR8SnJnhveTw5r1/NyNMi4kwdItgNzomIx0TEm1YNrldFxG8j4rrBQOBumo91PuZZ4PHx1Sw8
        ejUbe8V/AZMWDsiuTieBAAAAAElFTkSuQmCC
</value>
  </data>
</root>